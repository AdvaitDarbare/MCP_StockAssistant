{"ast":null,"code":"var _jsxFileName = \"/Users/advaitdarbare/Desktop/ai-stock-assistant/frontend/src/components/Message.tsx\";\nimport React from 'react';\nimport { User, Bot } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Message({\n  message\n}) {\n  const isUser = message.role === 'user';\n\n  // Format the message content to handle markdown-like formatting\n  const formatContent = content => {\n    // Convert markdown-style formatting to HTML\n    let formatted = content\n    // Bold text **text** -> <strong>text</strong>\n    .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n    // Italic text *text* -> <em>text</em>  \n    .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n    // Code blocks ```code``` -> <pre><code>code</code></pre>\n    .replace(/```(.*?)```/gs, '<pre class=\"code-block\"><code>$1</code></pre>')\n    // Inline code `code` -> <code>code</code>\n    .replace(/`([^`]+)`/g, '<code class=\"bg-gray-100 px-1 py-0.5 rounded text-sm\">$1</code>')\n    // Line breaks\n    .replace(/\\n/g, '<br />');\n    return formatted;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex gap-3 ${isUser ? 'justify-end' : 'justify-start'} mb-6`,\n    children: [!isUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-shrink-0 w-8 h-8 bg-primary-500 rounded-full flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(Bot, {\n        className: \"w-5 h-5 text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `flex flex-col ${isUser ? 'items-end' : 'items-start'} max-w-4xl`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: isUser ? 'message-user' : 'message-assistant',\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `prose ${isUser ? 'prose-invert' : ''} prose-sm max-w-none`,\n          dangerouslySetInnerHTML: {\n            __html: formatContent(message.content)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-gray-500 mt-1 px-1\",\n        children: message.timestamp.toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), isUser && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-shrink-0 w-8 h-8 bg-gray-700 rounded-full flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(User, {\n        className: \"w-5 h-5 text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = Message;\nvar _c;\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"names":["React","User","Bot","jsxDEV","_jsxDEV","Message","message","isUser","role","formatContent","content","formatted","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","timestamp","toLocaleTimeString","hour","minute","_c","$RefreshReg$"],"sources":["/Users/advaitdarbare/Desktop/ai-stock-assistant/frontend/src/components/Message.tsx"],"sourcesContent":["import React from 'react';\nimport { Message as MessageType } from '../types';\nimport { User, Bot } from 'lucide-react';\n\ninterface MessageProps {\n  message: MessageType;\n}\n\nexport function Message({ message }: MessageProps) {\n  const isUser = message.role === 'user';\n\n  // Format the message content to handle markdown-like formatting\n  const formatContent = (content: string) => {\n    // Convert markdown-style formatting to HTML\n    let formatted = content\n      // Bold text **text** -> <strong>text</strong>\n      .replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>')\n      // Italic text *text* -> <em>text</em>  \n      .replace(/\\*(.*?)\\*/g, '<em>$1</em>')\n      // Code blocks ```code``` -> <pre><code>code</code></pre>\n      .replace(/```(.*?)```/gs, '<pre class=\"code-block\"><code>$1</code></pre>')\n      // Inline code `code` -> <code>code</code>\n      .replace(/`([^`]+)`/g, '<code class=\"bg-gray-100 px-1 py-0.5 rounded text-sm\">$1</code>')\n      // Line breaks\n      .replace(/\\n/g, '<br />');\n\n    return formatted;\n  };\n\n  return (\n    <div className={`flex gap-3 ${isUser ? 'justify-end' : 'justify-start'} mb-6`}>\n      {!isUser && (\n        <div className=\"flex-shrink-0 w-8 h-8 bg-primary-500 rounded-full flex items-center justify-center\">\n          <Bot className=\"w-5 h-5 text-white\" />\n        </div>\n      )}\n      \n      <div className={`flex flex-col ${isUser ? 'items-end' : 'items-start'} max-w-4xl`}>\n        <div className={isUser ? 'message-user' : 'message-assistant'}>\n          <div \n            className={`prose ${isUser ? 'prose-invert' : ''} prose-sm max-w-none`}\n            dangerouslySetInnerHTML={{ __html: formatContent(message.content) }}\n          />\n        </div>\n        \n        <div className=\"text-xs text-gray-500 mt-1 px-1\">\n          {message.timestamp.toLocaleTimeString([], { \n            hour: '2-digit', \n            minute: '2-digit' \n          })}\n        </div>\n      </div>\n\n      {isUser && (\n        <div className=\"flex-shrink-0 w-8 h-8 bg-gray-700 rounded-full flex items-center justify-center\">\n          <User className=\"w-5 h-5 text-white\" />\n        </div>\n      )}\n    </div>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,IAAI,EAAEC,GAAG,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMzC,OAAO,SAASC,OAAOA,CAAC;EAAEC;AAAsB,CAAC,EAAE;EACjD,MAAMC,MAAM,GAAGD,OAAO,CAACE,IAAI,KAAK,MAAM;;EAEtC;EACA,MAAMC,aAAa,GAAIC,OAAe,IAAK;IACzC;IACA,IAAIC,SAAS,GAAGD;IACd;IAAA,CACCE,OAAO,CAAC,gBAAgB,EAAE,qBAAqB;IAChD;IAAA,CACCA,OAAO,CAAC,YAAY,EAAE,aAAa;IACpC;IAAA,CACCA,OAAO,CAAC,eAAe,EAAE,+CAA+C;IACzE;IAAA,CACCA,OAAO,CAAC,YAAY,EAAE,iEAAiE;IACxF;IAAA,CACCA,OAAO,CAAC,KAAK,EAAE,QAAQ,CAAC;IAE3B,OAAOD,SAAS;EAClB,CAAC;EAED,oBACEP,OAAA;IAAKS,SAAS,EAAE,cAAcN,MAAM,GAAG,aAAa,GAAG,eAAe,OAAQ;IAAAO,QAAA,GAC3E,CAACP,MAAM,iBACNH,OAAA;MAAKS,SAAS,EAAC,oFAAoF;MAAAC,QAAA,eACjGV,OAAA,CAACF,GAAG;QAACW,SAAS,EAAC;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CACN,eAEDd,OAAA;MAAKS,SAAS,EAAE,iBAAiBN,MAAM,GAAG,WAAW,GAAG,aAAa,YAAa;MAAAO,QAAA,gBAChFV,OAAA;QAAKS,SAAS,EAAEN,MAAM,GAAG,cAAc,GAAG,mBAAoB;QAAAO,QAAA,eAC5DV,OAAA;UACES,SAAS,EAAE,SAASN,MAAM,GAAG,cAAc,GAAG,EAAE,sBAAuB;UACvEY,uBAAuB,EAAE;YAAEC,MAAM,EAAEX,aAAa,CAACH,OAAO,CAACI,OAAO;UAAE;QAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENd,OAAA;QAAKS,SAAS,EAAC,iCAAiC;QAAAC,QAAA,EAC7CR,OAAO,CAACe,SAAS,CAACC,kBAAkB,CAAC,EAAE,EAAE;UACxCC,IAAI,EAAE,SAAS;UACfC,MAAM,EAAE;QACV,CAAC;MAAC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELX,MAAM,iBACLH,OAAA;MAAKS,SAAS,EAAC,iFAAiF;MAAAC,QAAA,eAC9FV,OAAA,CAACH,IAAI;QAACY,SAAS,EAAC;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACO,EAAA,GApDepB,OAAO;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}