{"ast":null,"code":"var _jsxFileName = \"/Users/advaitdarbare/Desktop/ai-stock-assistant/frontend/src/components/MarketClock.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MarketClock() {\n  _s();\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [isMarketOpen, setIsMarketOpen] = useState(false);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const now = new Date();\n      setCurrentTime(now);\n\n      // Market hours: 9:30 AM - 4:00 PM ET, Monday-Friday\n      const easternTime = new Date(now.toLocaleString(\"en-US\", {\n        timeZone: \"America/New_York\"\n      }));\n      const day = easternTime.getDay(); // 0 = Sunday, 1 = Monday, etc.\n      const hours = easternTime.getHours();\n      const minutes = easternTime.getMinutes();\n      const totalMinutes = hours * 60 + minutes;\n\n      // Market is open Monday (1) to Friday (5), 9:30 AM to 4:00 PM ET\n      const isWeekday = day >= 1 && day <= 5;\n      const marketOpenTime = 9 * 60 + 30; // 9:30 AM in minutes\n      const marketCloseTime = 16 * 60; // 4:00 PM in minutes\n      const isWithinMarketHours = totalMinutes >= marketOpenTime && totalMinutes < marketCloseTime;\n      setIsMarketOpen(isWeekday && isWithinMarketHours);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n  const formatTime = date => {\n    return date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-20 right-6 text-right text-gray-400 text-sm\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"font-mono text-lg text-white\",\n      children: formatTime(currentTime)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xs mb-1\",\n      children: \"Current time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `text-xs px-2 py-1 rounded-full ${isMarketOpen ? 'bg-green-900/30 text-green-400' : 'bg-red-900/30 text-red-400'}`,\n      children: [\"Market \", isMarketOpen ? 'Open' : 'Closed']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(MarketClock, \"1yFl30l347nRI3cirCYKDpAtpNg=\");\n_c = MarketClock;\nvar _c;\n$RefreshReg$(_c, \"MarketClock\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MarketClock","_s","currentTime","setCurrentTime","Date","isMarketOpen","setIsMarketOpen","timer","setInterval","now","easternTime","toLocaleString","timeZone","day","getDay","hours","getHours","minutes","getMinutes","totalMinutes","isWeekday","marketOpenTime","marketCloseTime","isWithinMarketHours","clearInterval","formatTime","date","toLocaleTimeString","hour","minute","hour12","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/advaitdarbare/Desktop/ai-stock-assistant/frontend/src/components/MarketClock.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport function MarketClock() {\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [isMarketOpen, setIsMarketOpen] = useState(false);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const now = new Date();\n      setCurrentTime(now);\n      \n      // Market hours: 9:30 AM - 4:00 PM ET, Monday-Friday\n      const easternTime = new Date(now.toLocaleString(\"en-US\", {timeZone: \"America/New_York\"}));\n      const day = easternTime.getDay(); // 0 = Sunday, 1 = Monday, etc.\n      const hours = easternTime.getHours();\n      const minutes = easternTime.getMinutes();\n      const totalMinutes = hours * 60 + minutes;\n      \n      // Market is open Monday (1) to Friday (5), 9:30 AM to 4:00 PM ET\n      const isWeekday = day >= 1 && day <= 5;\n      const marketOpenTime = 9 * 60 + 30; // 9:30 AM in minutes\n      const marketCloseTime = 16 * 60; // 4:00 PM in minutes\n      const isWithinMarketHours = totalMinutes >= marketOpenTime && totalMinutes < marketCloseTime;\n      \n      setIsMarketOpen(isWeekday && isWithinMarketHours);\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  const formatTime = (date: Date) => {\n    return date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n\n  return (\n    <div className=\"fixed bottom-20 right-6 text-right text-gray-400 text-sm\">\n      <div className=\"font-mono text-lg text-white\">{formatTime(currentTime)}</div>\n      <div className=\"text-xs mb-1\">Current time</div>\n      <div className={`text-xs px-2 py-1 rounded-full ${\n        isMarketOpen \n          ? 'bg-green-900/30 text-green-400' \n          : 'bg-red-900/30 text-red-400'\n      }`}>\n        Market {isMarketOpen ? 'Open' : 'Closed'}\n      </div>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,OAAO,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEvDC,SAAS,CAAC,MAAM;IACd,MAAMU,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9B,MAAMC,GAAG,GAAG,IAAIL,IAAI,CAAC,CAAC;MACtBD,cAAc,CAACM,GAAG,CAAC;;MAEnB;MACA,MAAMC,WAAW,GAAG,IAAIN,IAAI,CAACK,GAAG,CAACE,cAAc,CAAC,OAAO,EAAE;QAACC,QAAQ,EAAE;MAAkB,CAAC,CAAC,CAAC;MACzF,MAAMC,GAAG,GAAGH,WAAW,CAACI,MAAM,CAAC,CAAC,CAAC,CAAC;MAClC,MAAMC,KAAK,GAAGL,WAAW,CAACM,QAAQ,CAAC,CAAC;MACpC,MAAMC,OAAO,GAAGP,WAAW,CAACQ,UAAU,CAAC,CAAC;MACxC,MAAMC,YAAY,GAAGJ,KAAK,GAAG,EAAE,GAAGE,OAAO;;MAEzC;MACA,MAAMG,SAAS,GAAGP,GAAG,IAAI,CAAC,IAAIA,GAAG,IAAI,CAAC;MACtC,MAAMQ,cAAc,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;MACpC,MAAMC,eAAe,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;MACjC,MAAMC,mBAAmB,GAAGJ,YAAY,IAAIE,cAAc,IAAIF,YAAY,GAAGG,eAAe;MAE5FhB,eAAe,CAACc,SAAS,IAAIG,mBAAmB,CAAC;IACnD,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACjB,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMkB,UAAU,GAAIC,IAAU,IAAK;IACjC,OAAOA,IAAI,CAACC,kBAAkB,CAAC,OAAO,EAAE;MACtCC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EAED,oBACE/B,OAAA;IAAKgC,SAAS,EAAC,0DAA0D;IAAAC,QAAA,gBACvEjC,OAAA;MAAKgC,SAAS,EAAC,8BAA8B;MAAAC,QAAA,EAAEP,UAAU,CAACvB,WAAW;IAAC;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC7ErC,OAAA;MAAKgC,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChDrC,OAAA;MAAKgC,SAAS,EAAE,kCACd1B,YAAY,GACR,gCAAgC,GAChC,4BAA4B,EAC/B;MAAA2B,QAAA,GAAC,SACK,EAAC3B,YAAY,GAAG,MAAM,GAAG,QAAQ;IAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACnC,EAAA,CAjDeD,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}