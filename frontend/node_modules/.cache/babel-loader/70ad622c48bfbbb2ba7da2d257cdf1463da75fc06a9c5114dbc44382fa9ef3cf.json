{"ast":null,"code":"var _jsxFileName = \"/Users/advaitdarbare/Desktop/ai-stock-assistant/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Header } from './components/Header';\nimport { Message } from './components/Message';\nimport { TypingIndicator } from './components/TypingIndicator';\nimport { MessageInput } from './components/MessageInput';\nimport { QuickActions } from './components/QuickActions';\nimport { useChat } from './hooks/useChat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    messages,\n    isLoading,\n    sendMessage,\n    clearMessages\n  } = useChat();\n  const messagesEndRef = useRef(null);\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages, isLoading]);\n  const showQuickActions = messages.length <= 1 && !isLoading;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onClearChat: clearMessages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 overflow-y-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto px-4 py-6\",\n        children: [showQuickActions && /*#__PURE__*/_jsxDEV(QuickActions, {\n          onActionClick: sendMessage,\n          isLoading: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-0\",\n          children: [messages.map(message => /*#__PURE__*/_jsxDEV(Message, {\n            message: message\n          }, message.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)), isLoading && /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      onSendMessage: sendMessage,\n      isLoading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9C7/WqKRYvYHITxo0pUn9aHmTv0=\", false, function () {\n  return [useChat];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","Header","Message","TypingIndicator","MessageInput","QuickActions","useChat","jsxDEV","_jsxDEV","App","_s","messages","isLoading","sendMessage","clearMessages","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","showQuickActions","length","className","children","onClearChat","fileName","_jsxFileName","lineNumber","columnNumber","onActionClick","map","message","id","ref","onSendMessage","_c","$RefreshReg$"],"sources":["/Users/advaitdarbare/Desktop/ai-stock-assistant/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Header } from './components/Header';\nimport { Message } from './components/Message';\nimport { TypingIndicator } from './components/TypingIndicator';\nimport { MessageInput } from './components/MessageInput';\nimport { QuickActions } from './components/QuickActions';\nimport { useChat } from './hooks/useChat';\n\nfunction App() {\n  const { messages, isLoading, sendMessage, clearMessages } = useChat();\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages, isLoading]);\n\n  const showQuickActions = messages.length <= 1 && !isLoading;\n\n  return (\n    <div className=\"flex flex-col h-screen bg-gray-50\">\n      <Header onClearChat={clearMessages} />\n      \n      <main className=\"flex-1 overflow-y-auto\">\n        <div className=\"max-w-4xl mx-auto px-4 py-6\">\n          {showQuickActions && (\n            <QuickActions onActionClick={sendMessage} isLoading={isLoading} />\n          )}\n          \n          <div className=\"space-y-0\">\n            {messages.map((message) => (\n              <Message key={message.id} message={message} />\n            ))}\n            \n            {isLoading && <TypingIndicator />}\n            \n            <div ref={messagesEndRef} />\n          </div>\n        </div>\n      </main>\n      \n      <MessageInput onSendMessage={sendMessage} isLoading={isLoading} />\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}